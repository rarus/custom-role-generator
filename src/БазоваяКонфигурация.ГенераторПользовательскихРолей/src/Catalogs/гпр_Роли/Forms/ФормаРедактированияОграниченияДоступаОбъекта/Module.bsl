
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = СтрШаблон(
		НСтр("ru ='Ограничения доступа %1'"),
		Параметры.ПредставлениеОбъекта);
	
	УстановитьПраваДляРедактирования(Параметры.ВидОбъекта);
	
	Если ПраваДоступа.Количество() = 0 Тогда
		Отказ = Истина;
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = СтрШаблон(
			НСтр("ru='Для объекта %1 не доступно ограничение прав доступа.'"),
			Параметры.ПредставлениеОбъекта);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;	

	ЗаполнитьТекущиеНастройкиОграничений();
	
	СпискокРегистров = Новый Массив;
	СпискокРегистров.Добавить(Перечисления.гпр_ВидыМетаданных.РегистрБухгалтерии);
	СпискокРегистров.Добавить(Перечисления.гпр_ВидыМетаданных.РегистрНакоплений);
	СпискокРегистров.Добавить(Перечисления.гпр_ВидыМетаданных.РегистрРасчета);
	
	ЭтоРегистр = (СпискокРегистров.Найти(Параметры.ВидОбъекта));
	
	УстановитьДоступностьКомандОграниченийДоступа(ПраваДоступа[0].ПравоДоступа);
	
	ИмяОбъекта = Параметры.ИмяОбъекта;
	ВидОбъекта = Параметры.ВидОбъекта;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПраваДоступа

&НаКлиенте
Процедура ПраваДоступаПриАктивизацииСтроки(Элемент)
	
	Элементы.ОграниченияПравДоступа.ОтборСтрок = 
		Новый ФиксированнаяСтруктура("ПравоДоступа", Элементы.ПраваДоступа.ТекущиеДанные.ПравоДоступа);
	
	ПодключитьОбработчикОжидания("ПраваДоступаПриАктивизацииСтрокиОжидания", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОграниченияПравДоступа

&НаКлиенте
Процедура ОграниченияПравДоступаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	// Получим количество строк по текущему праву доступа
	ТекущаяСтрокаПравДоступа = Элементы.ПраваДоступа.ТекущиеДанные;
	
	Если (ТекущаяСтрокаПравДоступа.ПравоДоступа <> ПредопределенноеЗначение("Перечисление.гпр_ПраваДоступа.Чтение")
		ИЛИ ЭтоРегистр)
		И ОграниченияПравДоступа.НайтиСтроки(
				Новый Структура("ПравоДоступа", ТекущаяСтрокаПравДоступа.ПравоДоступа)).Количество() <> 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияПравДоступаПриИзменении(Элемент)
	
	ТекущееПравоДоступа = Элементы.ПраваДоступа.ТекущиеДанные;
	УстановитьДоступностьКомандОграниченийДоступа(
		?(ТекущееПравоДоступа = Неопределено,
		Неопределено,
		ТекущееПравоДоступа.ПравоДоступа));
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияПравДоступаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока ИЛИ Копирование Тогда
		ТекущиеДанные = Элементы.ОграниченияПравДоступа.ТекущиеДанные;
		ТекущиеДанные.ПравоДоступа = Элементы.ПраваДоступа.ТекущиеДанные.ПравоДоступа;
		ТекущиеДанные.Поля = "";
		УстановитьЗначениеПолям(ТекущиеДанные);	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияПравДоступаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
		
	ПодключитьОбработчикОжидания("ПраваДоступаПриАктивизацииСтрокиОжидания", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияПравДоступаПоляОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОграниченияПравДоступа.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные.Поля = "";
	УстановитьЗначениеПолям(ТекущиеДанные);

КонецПроцедуры


&НаКлиенте
Процедура ОграниченияПравДоступаПоляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ОграниченияПравДоступа.ТекущиеДанные;
	
	ВыбранныеПоля = Новый Массив;
	УсловиеПоиска = Новый Структура("ПравоДоступа", ТекущиеДанные.ПравоДоступа);
	НайденныеСтроки = ОграниченияПравДоступа.НайтиСтроки(УсловиеПоиска);
	
	Для Каждого ТекущаяСтрока Из НайденныеСтроки Цикл
		Если ТекущаяСтрока.Поля = ТекущиеДанные.Поля
			ИЛИ ПустаяСтрока(ТекущаяСтрока.Поля) Тогда
			Продолжить;
		КонецЕсли;
		ВыбранныеПоля.Добавить(ТекущаяСтрока.Поля);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ИмяОбъекта", ИмяОбъекта);
	ПараметрыФормы.Вставить("ВидОбъекта", ВидОбъекта);
	ПараметрыФормы.Вставить("ТекущиеПоля", ТекущиеДанные.Поля);
	ПараметрыФормы.Вставить("ВыбранныеПоля", СтрСоединить(ВыбранныеПоля, ","));
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ВыборПолейЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.гпр_Роли.Форма.ФормаВыбораПолей",
		ПараметрыФормы,
		ЭтотОбъект, , , ,
		ОбработчикОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОграниченияПравДоступаОграничениеДоступаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить(
		"ТекущийТекстОграничения",
		Элементы.ОграниченияПравДоступа.ТекущиеДанные.ОграничениеДоступа);	
	
	ОбработчикОповещения = Новый ОписаниеОповещения("РедактированиеОграниченияДоступаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.гпр_Роли.Форма.РедакторТекстаОграниченияДоступа",
		ПараметрыФормы,
		ЭтотОбъект, , , ,
		ОбработчикОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШаблоныОграничений

&НаКлиенте
Процедура ШаблоныОграниченийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Истина;
	
	ОбработчикДобавления = Новый ОписаниеОповещения("ДобавлениеШаблонаЗавершение", ЭтотОбъект);
		
	ОткрытьФорму(
		"Справочник.гпр_ШаблоныОграничений.ФормаВыбора",,
		ЭтотОбъект,,,,
		ОбработчикДобавления);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныОграниченийПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элементы.ШаблоныОграничений.ТекущиеДанные;
	
	Если ПустаяСтрока(ТекущиеДанные.ИмяШаблона) Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не указано имя шаблона.'"));
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	Отказ = Ложь;
	ПроверитьКорректностьЗаполнения(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	АдресРезультатаРедактирования = РезультатРедактирования();
	Закрыть(АдресРезультатаРедактирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УстановитьДоступностьредактированияПолей();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьредактированияПолей()
	
	Если ЭтоРегистр Тогда
		
		Элементы.ОграниченияПравДоступаПоля.ТолькоПросмотр = Истина;
		Возврат;
		
	КонецЕсли;
	
	НовыйЭлемент = УсловноеОформление.Элементы.Добавить();
	
	ЗапретОтображения = НовыйЭлемент.Оформление.Элементы.Найти("ТолькоПросмотр");
	ЗапретОтображения.Использование = Истина;
	ЗапретОтображения.Значение = Истина;
	
	НовыйОтбор = НовыйЭлемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	НовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОграниченияПравДоступа.Праводоступа");
	НовыйОтбор.ПравоеЗначение = Перечисления.гпр_ПраваДоступа.Чтение;
	НовыйОтбор.Использование = Истина;
	
	НовыйЭлемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ОграниченияПравДоступаПоля");
	
КонецПроцедуры


&НаСервере
Процедура УстановитьПраваДляРедактирования(ВидОбъекта)
	
	// Получим список прав доступа
	ПраваДоступаОбъекта = ПраваДоступаОбъектаДляРЛС(ВидОбъекта);
	
	// Не для всех объектов и прав доступа можно установить ограничения
	Если ПраваДоступаОбъекта = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекущееПравоДоступа Из ПраваДоступаОбъекта Цикл
		
		НоваяСтрока = ПраваДоступа.Добавить();
		НоваяСтрока.ПравоДоступа = ТекущееПравоДоступа;
		НоваяСтрока.Картинка = КартинкаПраваДоступа(ТекущееПравоДоступа);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПраваДоступаОбъектаДляРЛС(ВидОбъекта)
	
	Возврат ПраваДоступаОбъектов().Получить(ВидОбъекта);
	
КонецФункции

&НаСервере
Функция ПраваДоступаОбъектов()
	
	Результат = Новый Соответствие();
	
	ПраваРЛС = Новый Массив;
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Чтение);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ЖурналДокументов, ПраваРЛС);
	
	ПраваРЛС = Новый Массив;
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Чтение);
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Изменение);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.РегистрБухгалтерии, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.РегистрНакоплений, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.РегистрСведений, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.РегистрРасчета, ПраваРЛС);
	
	ПраваРЛС = Новый Массив;
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Чтение);
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Добавление);
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Изменение);
	ПраваРЛС.Добавить(Перечисления.гпр_ПраваДоступа.Удаление);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ПланОбмена, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.Справочник, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.Документ, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ПланВидовХарактеристик, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ПланСчетов, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ПланВидовРасчета, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.БизнесПроцесс, ПраваРЛС);
	Результат.Вставить(Перечисления.гпр_ВидыМетаданных.ЗадачаИсполнителя, ПраваРЛС);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция КартинкаПраваДоступа(ПравоДоступа)
	
	НаборКартинок = Новый Соответствие;
	НаборКартинок.Вставить(Перечисления.гпр_ПраваДоступа.Чтение, БиблиотекаКартинок.гпр_Чтение);
	НаборКартинок.Вставить(Перечисления.гпр_ПраваДоступа.Изменение, БиблиотекаКартинок.гпр_Изменение);
	НаборКартинок.Вставить(Перечисления.гпр_ПраваДоступа.Добавление, БиблиотекаКартинок.гпр_Добавление);
	НаборКартинок.Вставить(Перечисления.гпр_ПраваДоступа.Удаление, БиблиотекаКартинок.гпр_Удалить);
	
	Возврат НаборКартинок.Получить(ПравоДоступа);
	
КонецФункции

&НаСервере
Функция РезультатРедактирования()
	
	ДанныеРедактирования = Новый Структура();
	ДанныеРедактирования.Вставить(
		"ШаблоныОграничений",
		ШаблоныОграничений.Выгрузить());
	ДанныеРедактирования.Вставить(
		"ОграниченияПравДоступа",
		ОграниченияПравДоступа.Выгрузить()); 
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеРедактирования);
	
КонецФункции

&НаКлиенте
Процедура ДобавлениеШаблонаЗавершение(ВыбранныйШаблон, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ВыбранныйШаблон) Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = ШаблоныОграничений.Добавить();
	НоваяСтрока.ИмяШаблона = Строка(ВыбранныйШаблон);
	НоваяСтрока.ШаблонОграничения = ВыбранныйШаблон;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТекущиеНастройкиОграничений()
	
	ТекущиеНастройкиОграничений = ПолучитьИзВременногоХранилища(Параметры.АдресОграниченийПрав);
	
	Если Не ЗначениеЗаполнено(ТекущиеНастройкиОграничений) Тогда
		Возврат;
	КонецЕсли;
	
	ШаблоныОграничений.Загрузить(ТекущиеНастройкиОграничений.ШаблонОграничений);
	ОграниченияПравДоступа.Загрузить(ТекущиеНастройкиОграничений.ТекущиеОграниченияПравДоступа);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПолейЗавершение(ВыбранныеПоля, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ВыбранныеПоля = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОграниченияПравДоступа.ТекущиеДанные;
	
	Если ПустаяСтрока(ВыбранныеПоля) И ТекущиеДанные.Поля = ПредставлениеПрочиеПоля() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Поля = ВыбранныеПоля;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКомандОграниченийДоступа(ТекущееПравоДоступа)
	
	ДоступноДобавлениеПравДоступа = Ложь;
	
	Если ТекущееПравоДоступа <> Неопределено Тогда
		ДоступноДобавлениеПравДоступа = (ТекущееПравоДоступа = Перечисления.гпр_ПраваДоступа.Чтение И Не ЭтоРегистр)
			ИЛИ ОграниченияПравДоступа.НайтиСтроки(
				Новый Структура("ПравоДоступа", ТекущееПравоДоступа)).Количество() = 0;
	КонецЕсли;
	
	Элементы.ОграниченияПравДоступаДобавить.Доступность = ДоступноДобавлениеПравДоступа;
	Элементы.ОграниченияПравДоступаКонтекст.Доступность = ДоступноДобавлениеПравДоступа;
	
КонецПроцедуры

&НаКлиенте
Процедура ПраваДоступаПриАктивизацииСтрокиОжидания()
	
	ТекущиеДанные = ПраваДоступа.НайтиПоИдентификатору(Элементы.ПраваДоступа.ТекущаяСтрока);
	УстановитьДоступностьКомандОграниченийДоступа(ТекущиеДанные.ПравоДоступа)
	
КонецПроцедуры

&НаКлиенте
Функция ПредставлениеПрочиеПоля()
	
	Возврат НСтр("ru='<Прочие поля>'");
	
КонецФункции

&НаКлиенте
Процедура УстановитьЗначениеПолям(СтрокаОграничения)
	
	// Найдем надо ли устанавливать "Прочие поля"
	ПрочиеПоля = ПредставлениеПрочиеПоля();
	УсловиеПоиска = Новый Структура("ПравоДоступа,Поля", СтрокаОграничения.ПравоДоступа, ПрочиеПоля);
	Если ОграниченияПравДоступа.НайтиСтроки(УсловиеПоиска).Количество() = 0 Тогда
		СтрокаОграничения.Поля = ПрочиеПоля;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеОграниченияДоступаЗавершение(ТекстОграничения, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ТекстОграничения) <> Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ОграниченияПравДоступа.ТекущиеДанные;
	ТекущиеДанные.ОграничениеДоступа = ТекстОграничения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКорректностьЗаполнения(Отказ)
	
	// Проверим, что есть более чем 1 строка с пустым полем
	УсловиеПоиска = Новый Структура("Поля", "");
	ПустыеПоля = ОграниченияПравДоступа.НайтиСтроки(УсловиеПоиска);
	
	Если ПустыеПоля.Количество() > 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru ='Ограничение доступа для всех полей существует более, чем одно.'");
		Сообщение.Сообщить();
	КонецЕсли;
	
	// Проверим, что все ограничения доступа заполнены
	УсловиеПоиска = Новый Структура("ОграничениеДоступа", "");
	ПустыеОграниченияДоступа = ОграниченияПравДоступа.НайтиСтроки(УсловиеПоиска);
	
	Если ПустыеОграниченияДоступа.Количество() > 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru ='Не для всех полей указано ограничение доступа.'");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
