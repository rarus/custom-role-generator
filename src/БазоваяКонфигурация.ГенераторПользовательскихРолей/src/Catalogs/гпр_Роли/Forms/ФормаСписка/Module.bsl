
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьРасширение(Команда)
	
	Результат = СоздатьРасширениеВозможно();
	
	Если Результат.Ошибка Тогда
		
		ПоказатьПредупреждение(, Результат.ТекстОшибки);
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.гпр_Роли.Форма.ФормаОжиданияФормированияРасширения",, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭкспортРолей(Команда)
	
	гпр_ИспортЭкспортРолейКлиент.СохранитьРолиНаДиск(Элементы.Список.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмпортРолей(Команда)
	
	гпр_ИспортЭкспортРолейКлиент.ЗагрузитьРоли(УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СоздатьРасширениеВозможно()
	
	Результат = Новый Структура("Ошибка,ТекстОшибки", Ложь, "");
	
	Если НетРолейДляВыгрузки() Тогда
		
		Результат.Ошибка = Истина;
		Результат.ТекстОшибки = НСтр("ru = 'Нет данных для выгрузки ролей.'");
		
	ИначеЕсли БезопасныйРежимВыключен() Тогда
		
		Результат.Ошибка = Истина;
		Результат.ТекстОшибки = НСтр("ru = 'У расширения включен безопасный режим. Для генерации расширения его необходимо отключить'");
		
	КонецЕсли;
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
	
КонецФункции

&НаСервереБезКонтекста
Функция НетРолейДляВыгрузки()
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	гпр_РолиПраваДоступа.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.гпр_Роли.ПраваДоступа КАК гпр_РолиПраваДоступа
		|ГДЕ
		|	НЕ гпр_РолиПраваДоступа.Ссылка.ПометкаУдаления"
	);
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция БезопасныйРежимВыключен()
	
	НайденныеРасширения = РасширенияКонфигурации.Получить(
		Новый Структура(
			"УникальныйИдентификатор",
			Метаданные.Справочники.гпр_Роли.РасширениеКонфигурации().УникальныйИдентификатор
		)
	);
	
	Если Не ЗначениеЗаполнено(НайденныеРасширения) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат НайденныеРасширения[0].БезопасныйРежим;
	
КонецФункции

#КонецОбласти
